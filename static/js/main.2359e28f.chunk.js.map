{"version":3,"sources":["logo.svg","components/card/card.js","components/card-list/card-list.js","components/searchbox/searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","className","alt","src","this","props","monster","id","name","email","React","Component","CardList","monsters","map","SearchBox","type","placeholder","onChange","onSearchChange","App","state","searchField","e","setState","target","value","console","log","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,kBCcAA,E,4JAXX,WACI,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BC,KAAKC,MAAMC,QAAQC,GAA7C,4BACtB,6BAAiCH,KAAKC,MAAMC,QAAQE,MAA3CJ,KAAKC,MAAMC,QAAQC,IAC5B,4BAAIH,KAAKC,MAAMC,QAAQG,e,GANpBC,IAAMC,WCWVC,G,kKATX,WACI,OACI,qBAAKX,UAAU,YAAf,SAA4BG,KAAKC,MAAMQ,SAASC,KAAI,SAAAR,GAAO,OACvD,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,a,GAJZG,IAAMC,YCOdI,G,kKAPX,WACI,OACI,uBAAOd,UAAU,SAASe,KAAK,SAASC,YAAY,iBAAiBC,SAAUd,KAAKC,MAAMc,qB,GAH9ET,IAAMC,YCyCfS,E,4MAlCdC,MAAO,CACNR,SAAU,GACVS,YAAY,I,EASbH,eAAiB,SAACI,GACjB,EAAKC,SAAS,CAACF,YAAYC,EAAEE,OAAOC,QAAQ,WAAOC,QAAQC,IAAI,EAAKP,MAAMC,iB,uDAP3E,WAAqB,IAAD,OACnBO,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACX,SAASoB,S,oBAOtC,WAAS,IAAD,EAEsB7B,KAAKiB,MAA9BR,EAFG,EAEHA,SAAUS,EAFP,EAEOA,YAEXY,EAAmBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC/CA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAG3C,OACI,sBAAKnC,UAAU,MAAf,UACR,iDACA,cAAC,EAAD,CAAWkB,eAAgBf,KAAKe,iBAChC,cAAC,EAAD,CAAUN,SAAUqB,W,GA7BNvB,aCKH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2359e28f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react'\nimport './card.css'\nclass Card extends React.Component{\n    render(){\n        return(\n            <div className=\"card-container\" >\n                <img alt='monster' src={`https://robohash.org/${this.props.monster.id}?set=set2%size=180x180`}></img>\n                <h2 key={this.props.monster.id}>{this.props.monster.name}</h2>\n                <p>{this.props.monster.email}</p>\n            </div>\n        )\n    }\n}\n\nexport default Card","import React, {Component} from 'react'\nimport Card from '../card/card'\nimport './card-list.css'\nclass CardList extends React.Component{\n    render(){\n        return(\n            <div className=\"card-list\">{this.props.monsters.map(monster => (\n                <Card key={monster.id} monster ={monster}/>\n            ) )}</div>\n        )\n    }\n}\n\nexport default CardList","import React, {Component} from 'react'\nimport './searchbox.css'\nclass SearchBox extends React.Component{\n    render(){\n        return(\n            <input className=\"search\" type='search' placeholder='Search Monster' onChange={this.props.onSearchChange} />\n        )\n    }\n}\n\nexport default SearchBox","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\n\nimport CardList  from './components/card-list/card-list'\nimport SearchBox from './components/searchbox/searchbox';\n\nclass App extends Component {\n\t\n\tstate= {\n\t\tmonsters: [],\n\t\tsearchField:''\n\t}\n\t\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({monsters:users}))\n\t}\n\n\tonSearchChange = (e) => {\n\t\tthis.setState({searchField:e.target.value}, () => {console.log(this.state.searchField)})\n\t}\n\n    render(){\n\n\t\tconst {monsters, searchField} = this.state\n\n\t\tconst filteredMonsters = monsters.filter(monster => (\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t))\n\n        return (\t\n            <div className=\"App\">\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox onSearchChange={this.onSearchChange} />\n\t\t\t\t<CardList monsters={filteredMonsters} />\n            </div>\n      )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}